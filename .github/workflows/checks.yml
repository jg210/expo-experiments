name: checks
on: push
env:
  XCODE_VERSION: 16.4.0
  IOS_SIMULATOR_NAME: iPhone 16
  IOS_SIMULATOR_OS: 18.6
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
jobs:
  
  js:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4.1.1        
    - uses: actions/setup-node@v4.0.1
      with:
        node-version-file: '.node-version'
        cache: 'npm'
    - name: npm install
      run: |
        . environment
        npm ci
    - name: shellcheck
      uses: ludeeus/action-shellcheck@2.0.0
      env:
        SHELLCHECK_OPTS: -x
      with:
        version: v0.11.0
        additional_files: scripts/* e2e/maestro/run_maestro_ci
        ignore_paths: >-
          node_modules
    - name: npm run lint
      run: |
        . environment
        npm run lint
    - name: tsc
      run: |
        . environment
        tsc
    - name: npm test
      run: |
        . environment
        npm test

    # git-status must be last step
    - uses: ./.github/actions/git-status

  android:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4.1.1
        
    - uses: actions/setup-node@v4.0.1
      with:
        node-version-file: '.node-version'
        cache: 'npm'

    - uses: actions/setup-java@v4.7.0
      with:
        java-version: 21
        distribution: temurin
        cache: 'gradle'

    - uses: amyu/setup-android@v4

    - name: npm install
      run: |
        . environment
        npm ci

    - name: prebuild
      run: |
        . environment
        expo prebuild --platform android

    - name: npm run android-test
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      run: |
        . environment
        npm run android-test

    - name: test report - android gradle test
      uses: actions/upload-artifact@v4.3.0
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: android-test
        path: |
          android/app/build/reports/tests
          modules/expo-experiments/android/build/reports/tests

    - name: release apk build
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      run: |
        . environment
        npm run android-release-apk

    - name: upload release apk
      uses: actions/upload-artifact@v4
      with:
        name: app-release.apk
        path: android/app/build/outputs/apk/release/app-release.apk

    # git-status must be last step
    - uses: ./.github/actions/git-status

  android-test:
    runs-on: ubuntu-24.04
    needs: android # for the apk
    strategy:
      fail-fast: false
      matrix:
        # Would be good to test on minSdkVersion=21, but https://github.com/mobile-dev-inc/maestro/issues/1207 means need to use 26.
        api-level: [26, 35]

    steps:
      - uses: actions/checkout@v4.1.1

      - name: download apk
        uses: actions/download-artifact@v4
        with:
          name: app-release.apk
          path: ${{ runner.temp }}

      - name: enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: install maestro
        run: scripts/install_maestro

      # https://github.com/marketplace/actions/android-emulator-runner#usage--examples suggests caching the AVD, but it didn't
      # seem much faster, and the emulator failed to stop when used cached AVD.
      #
      # Emulators crash relatively often, so step is retried if that happens.
      - name: maestro
        uses: Wandalen/wretry.action@v3.8.0
        with:
          attempt_limit: 3
          # run_maestro_ci uses with_emulator_status to set emulator_running to true/false using GITHUB_OUTPUT.
          retry_condition: steps._this.outputs.emulator_running == false
          action: reactivecircus/android-emulator-runner@v2
          with: |
            api-level: ${{ matrix.api-level }}
            arch: x86_64
            script: e2e/maestro/run_maestro_ci android

      - name: maestro logs
        uses: actions/upload-artifact@v4
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: maestro logs - API ${{ matrix.api-level }}
          path: ~/.maestro/tests/
          if-no-files-found: error

      - name: logcat
        uses: actions/upload-artifact@v4
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: logcat.txt - API ${{ matrix.api-level }}
          path: ${{ runner.temp }}/logcat.txt
          if-no-files-found: error

      # git-status must be last step
      - uses: ./.github/actions/git-status

  ios:
    runs-on: macos-15

    steps:
    - uses: actions/checkout@v4.1.1

    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ env.XCODE_VERSION }}

    - uses: actions/setup-node@v4.0.1
      with:
        node-version-file: '.node-version'
        cache: 'npm'

    - name: npm install
      run: |
        . environment
        npm ci

    - name: prebuild
      run: |
        . environment
        expo prebuild --platform ios

    - name: available simulator versions
      run: |
        . environment
        xcrun simctl list

    - name: build
      env:
        SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      run: |
        . environment
        cd ios
        xcodebuild -workspace expoexperiments.xcworkspace \
          -scheme expoexperiments \
          -configuration Release \
          -derivedDataPath build \
          -destination 'platform=iOS Simulator,name=${{ env.IOS_SIMULATOR_NAME }},OS=${{ env.IOS_SIMULATOR_OS }}'

    - name: upload release
      uses: actions/upload-artifact@v4
      with:
        name: expoexperiments.app
        path: ios/build/Build/Products/Release-iphonesimulator
        if-no-files-found: error

    # git-status must be last step
    - uses: ./.github/actions/git-status

  ios-test:
    runs-on: macos-15
    needs: ios # for the app

    steps:
      - uses: actions/checkout@v4.1.1

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: available simulator versions
        run: |
          . environment
          xcrun simctl list

      - name: download app
        uses: actions/download-artifact@v4
        with:
          name: expoexperiments.app
          path: ${{ runner.temp }}

      - name: install maestro
        run: scripts/install_maestro

      - name: maestro
        run: e2e/maestro/run_maestro_ci ios

      - name: maestro logs
        uses: actions/upload-artifact@v4
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: maestro logs
          path: |
            ~/.maestro/tests/
            ~/Library/Logs/maestro/
            ${{ runner.temp }}/ios_simulator_logs.txt
            ~/Library/Logs/CoreSimulator/CoreSimulator.log
            ~/Library/Logs/DiagnosticReports/
          if-no-files-found: error

      - name: extract crash backtrace from any DiagnosticReports
        if: success() || failure()    # run this step even if previous step failed
        run: |
            shopt -s nullglob
            for f in ~/Library/Logs/DiagnosticReports/expoexperiments-*.ips ; do
              {
                # TODO add a script that also escapes any ``` in content.
                printf '```\n'
                printf '\n%s:\n' "${f}"
                tail -n +2 "${f}" | jq -r '.lastExceptionBacktrace[].symbol'
                printf '```\n'
              } | tee -a "${GITHUB_STEP_SUMMARY}"
            done

      # git-status must be last step
      - uses: ./.github/actions/git-status
