* Run maestro tests on github actions for iOS.
  - cache cocoapod files
    - https://samwize.com/2023/05/24/speed-up-pods-and-gem-install-in-github-action/
    - need Podfile.lock, so after expo prebuild
      - but it does pod install, so that's too late.
  - is it possible to use "-destination generic/platform=iOS" when building for simulator?  
  - xcpretty
    - xcbeautify is maybe better than xcpretty?
      - https://docs.fastlane.tools/best-practices/xcodebuild-formatters/
    - is xcpretty available?
      - would a GemFile be required?
      - already have https://www.npmjs.com/package/@expo/xcpretty
        - use this?

* Do GitHub Actions jobs need so many permissions?

* Does android build used for testing need --no-publish and 

* A with_environment script for use in checks.yaml.

* Store master-branch apks as GitHub Actions releases.

* Add a turbomodule too, to compare with the expo native module.

* Use full width of device screen.

* Nicer refresh UI?

* Avoid duplication between GitHub Actions jobs. 

* dorny/test-reporter for android gradle test results.

* Run eas build on github actions too?
  - likely faster than using eas build directly.

* Mock data in e2e tests
  - currently rely on FSA data remaining stable
    - not too risky currently, and does ensure it really works
  - could allow app to be started with fake data
    - Intent extra / iOS command-line argument
    - not allowing arbitrary URL to be substituted in production builds (security risk).
    - a build variant just for tests
      - variants cost lots in terms of build times etc.
      - not what would ship
    - allow fake data in production, but it's fixed and baked into the app?

* Expo prevents use of eslint 9: https://github.com/expo/expo/issues/28144. eslint 8 is no longer maintained.

* Try out https://docs.expo.dev/guides/react-compiler/

* Run expo-doctor on CI?

* iOS implementation for fingerprintAuthorities.

* Contribute something to eas build that lets it parse .node-version so don't need to specify in eas.json?

* Is it possible to test that react-hooks/exhaustive-deps checks useLastPromise?

* cache maestro installation files on GitHub Actions?
  - little point, since downloaded from GitHub release, so as fast as caching files.

* reactivecircus/android-emulator-runner@v2 doesn't version emulator tool or AVD base image

* Test on minSdkVersion=21
  - https://github.com/mobile-dev-inc/maestro/issues/1207 prevented this
