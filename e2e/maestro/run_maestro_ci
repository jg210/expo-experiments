#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail

SOURCE_DIR="$(readlink -f "$(dirname "${BASH_SOURCE[0]}")"/../..)"
. "${SOURCE_DIR}/.common.sh"
. "${SOURCE_DIR}/environment"

platform=$1
shift

android() {
    apk="${RUNNER_TEMP}/app-release.apk"
    log "installing: ${apk}"
    adb install "${apk}"
    log "running maestro."
    exec with_emulator_status with_logcat "${RUNNER_TEMP}/logcat.txt" scripts/run_maestro
}

ios() {
    app="${RUNNER_TEMP}/expoexperiments.app"
    log "starting simulator: ${IOS_SIMULATOR_NAME} iOS ${IOS_SIMULATOR_OS}"
    IOS_SIMULATOR_OS_WITH_DASHES=$(tr . - <<< "${IOS_SIMULATOR_OS}")
    devicesJson=$(xcrun simctl list --json)
    printf "%s\n" "${devicesJson}"
    UDID=$(jq -r ".devices[\"com.apple.CoreSimulator.SimRuntime.iOS-${IOS_SIMULATOR_OS_WITH_DASHES}\"][] | select(.name == \"${IOS_SIMULATOR_NAME}\" and .isAvailable) | .udid" <<< "${devicesJson}")
    log "UDID: ${UDID}"
    xcrun simctl boot "${UDID}"
    log "installing app from: ${app}"
    xcrun simctl install booted "${app}"
    exec with_ios_logs "${RUNNER_TEMP}/ios_simulator_logs.txt" scripts/run_maestro
}

case "${platform}" in
    android)
        android
        ;;
    ios)
        ios
        ;;
    *)
        log "unknown platform: ${platform}"
        exit 1
        ;;
esac
